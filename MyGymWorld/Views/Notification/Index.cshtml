@model AllNotificationsViewModel

@{
    ViewData["Title"] = "Notifications";
}

<div class="text-center">
    <h1 class="display-4">Your Notifications</h1>
</div>

<hr />

@if (!Model.Notifications.Any())
{
    <div class="alert alert-info col-md-12 text-center" role="alert">
        You have no notifications.
    </div>
}
else
{
    @foreach (var notification in Model.Notifications.OrderByDescending(n => n.CreatedOn))
    {
        var timeSinceNotificationCreated = DateTime.UtcNow.Subtract(notification.CreatedOn).TotalMinutes;

        <div class="bg-primary mt-3">
            <div class="toast-header">
                <svg class="bd-placeholder-img rounded mr-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg"
                     preserveAspectRatio="xMidYMid slice" focusable="false" role="img">
                    @if (notification.IsRead == false)
                    {
                        <rect fill="#007aff" width="100%" height="100%" />
                        <strong class="mr-auto">New</strong>
                    }
                    else
                    {
                        <rect fill="gray" width="100%" height="100%" />
                        <strong class="mr-auto">Seen</strong>
                    }
                </svg>
                @if (timeSinceNotificationCreated >= 60)
                {
                    if (timeSinceNotificationCreated >= 1440)
                    {
                        <small style="margin-left: 20px;">@DateTime.UtcNow.Subtract(notification.CreatedOn).TotalDays.ToString("f0") days ago</small>
                    }
                    else
                    {
                        <small style="margin-left: 20px;">@DateTime.UtcNow.Subtract(notification.CreatedOn).TotalHours.ToString("f0") hours ago</small>
                    }
                }
                else
                {
                    if (timeSinceNotificationCreated < 1)
                    {
                        <small style="margin-left: 20px;">@DateTime.UtcNow.Subtract(notification.CreatedOn).TotalSeconds.ToString("f0") seconds ago</small>
                    }
                    else
                    {
                        <small style="margin-left: 20px;">@timeSinceNotificationCreated.ToString("f0") mins ago</small>
                    }
                }
                <form asp-area="" asp-controller="Notification" asp-action="Delete" method="post">
                    <input type="hidden" name="notificationId" value="@notification.Id"/>
                    <button type="submit" class="ml-2 mb-1 close" title="Delete" style="margin-left: 20px;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </form>
            </div>
            <div class="toast-body text-white row">
                <div class="col-md-10">
                    <a href="@notification.Url" style="color: whitesmoke;"> @notification.Content</a>
                </div>
                <div class="col-md-2">
                    <form asp-area="" asp-controller="Notification" asp-action="Read" method="post" id="deleteForm">
                        <input type="text" name="url" value="@notification.Url" hidden />
                        <input type="text" name="notificationId" value="@notification.Id" hidden />
                        <button class="btn btn-warning float-right" disabled="@notification.IsRead">
                            Mark as Read
                        </button>
                    </form>
                </div>
            </div>
        </div>
    }
}